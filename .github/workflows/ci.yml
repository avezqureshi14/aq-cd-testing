name: COMPONENT-LIBRARY-STG

on:
  push:
    branches: [main]

  workflow_dispatch:
    inputs:
      target_branch:
        description: 'Select branch to run on'
        required: true
        default: main

jobs:
  setup:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.ref == 'refs/heads/${{ github.event.inputs.target_branch }}'
    outputs:
      filename: ${{ steps.pack-output.outputs.filename }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Cache pnpm and node_modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            node_modules
            tsconfig.tsbuildinfo
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install

      - name: Run tests
        run: pnpm test

      - name: Build project
        run: pnpm build

      - name: Pack the package
        id: pack-output
        run: |
          pnpm pack
          FILE=$(ls *.tgz)
          echo "filename=$FILE" >> $GITHUB_OUTPUT

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            *.tgz
            tsconfig.tsbuildinfo

  publish:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: .

      - name: Publish to GitLab NPM Registry
        env:
          GITLAB_TOKEN: ${{ secrets.GITLAB_DEPLOY_TOKEN }}
          GITLAB_PROJECT_ID: ${{ secrets.GITLAB_PROJECT_ID }}
        run: |
          set -e
          npm config set //gitlab.com/api/v4/projects/${GITLAB_PROJECT_ID}/packages/npm/:_authToken=${GITLAB_TOKEN}
          npm config set //gitlab.com/api/v4/packages/npm/:_authToken=${GITLAB_TOKEN}
          echo "Project ID: $GITLAB_PROJECT_ID"
          echo "Token length: ${#GITLAB_TOKEN}"
          echo "Publishing:"
          ls -la *.tgz
          if ! npm publish *.tgz --registry=https://gitlab.com/api/v4/projects/${GITLAB_PROJECT_ID}/packages/npm/
          then
            echo "Publish failed!"
            [ -f npm-debug.log ] && tail -n 50 npm-debug.log
            exit 1
          else
            echo "Publish successful"
          fi
